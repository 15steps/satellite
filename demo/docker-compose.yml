version: '3.7'
services:
  orbiter:
    image: gianarb/orbiter
    command: /bin/orbiter daemon --debug
    ports:
      - 8000:8000
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - devops-net
    deploy:
      placement:
        constraints:
          - node.role == manager
  alertmanager:
    image: prom/alertmanager
    ports:
    - 9093:9093
    command: 
         - --config.file=/etc/alertmanager/alert-manager.yml
    depends_on:
         - prometheus
    volumes:
         - ./alert-manager.yml:/etc/alertmanager/alert-manager.yml
    networks:
         - devops-net
  prometheus:
    image: prom/prometheus:latest
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - ./alert-rules.yml:/etc/prometheus/alert-rules.yml:ro
    networks:
      - devops-net
  cadvisor:
    image: google/cadvisor:latest
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - devops-net
    deploy:
      mode: global
  httpbin:
    image: kennethreitz/httpbin
    ports:
      - 8001:80
    environment:
      - SERVICE_PORTS=80
    networks:
      - devops-net
    deploy:
      replicas: 3
      labels:
        orbiter: "true"
  satellite:
    image: wellfelix/satellite
    ports:
      - 3000:3000
    networks:
      - devops-net
    deploy:
      placement:
        constraints:
          - node.role == manager
  haproxy:
    image: dockercloud/haproxy
    ports:
      - 80:80
    environment:
      - BALANCE=roundrobin
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - devops-net
    depends_on: 
      - httpbin
    deploy:
      placement:
        constraints:
          - node.role == manager
networks:
  devops-net:
    driver: overlay
    attachable: true
